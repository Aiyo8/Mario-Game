/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./docs/game.js":
/*!**********************!*\
  !*** ./docs/game.js ***!
  \**********************/
/***/ (() => {

eval("kaboom({\n  global: true,\n  fullscreen: true,\n  scale: 2,\n  debug: true,\n  clearColor: [0, 0, 0, 1],\n  root: document.getElementById(\"game\"),\n});\n\nlet MOVE_SPEED = 120; //sets difficulty\nconst JUMP_FORCE = 400;\nconst BIG_JUMP_FORCE = 500;\nlet ENEMY_SPEED = 30;\nconst FALL_DEATH = 400;\nlet isJumping;\nlet current_jump_force = JUMP_FORCE;\n\nloadSound(\n  \"jump\",\n  \"https://raw.githubusercontent.com/dtellz/mario_game/main/docs/sounds/smb_jump-small.wav\"\n);\nloadSound(\n  \"getCoin\",\n  \"https://raw.githubusercontent.com/dtellz/mario_game/main/docs/sounds/smb_coin.wav\"\n);\nloadSound(\n  \"die\",\n  \"https://raw.githubusercontent.com/dtellz/mario_game/main/docs/sounds/smb_mariodie.wav\"\n);\nloadSound(\n  \"gameOver\",\n  \"https://raw.githubusercontent.com/dtellz/mario_game/main/docs/sounds/smb_gameover.wav\"\n);\n\nloadSprite(\"coin\", \"https://i.imgur.com/wbKxhcd.png\");\nloadSprite(\"evil-mushroom\", \"https://i.imgur.com/ZhEhvqr.png\");\nloadSprite(\"brick\", \"https://i.imgur.com/pogC9x5.png\");\nloadSprite(\"block\", \"https://i.imgur.com/M6rwarW.png\");\nloadSprite(\"mario\", \"https://i.imgur.com/sekDOp9.png\");\nloadSprite(\"mushroom\", \"https://i.imgur.com/0wMd92p.png\");\nloadSprite(\"surprise\", \"https://i.imgur.com/gesQ1KP.png\");\nloadSprite(\"unboxed\", \"https://i.imgur.com/bdrLpi6.png\");\nloadSprite(\"pipe-top-left\", \"https://i.imgur.com/ReTPiWY.png\");\nloadSprite(\"pipe-top-right\", \"https://i.imgur.com/hj2GK4n.png\");\nloadSprite(\"pipe-bottom-left\", \"https://i.imgur.com/c1cYSbt.png\");\nloadSprite(\"pipe-bottom-right\", \"https://i.imgur.com/nqQ79eI.png\");\nloadSprite(\"hidden-surprise\", \"https://i.imgur.com/dh2hhyc.png\"); //this image is a single black pixel\n\nloadSprite(\"blue-block\", \"https://i.imgur.com/fVscIbn.png\");\nloadSprite(\"blue-brick\", \"https://i.imgur.com/3e5YRQd.png\");\nloadSprite(\"blue-steel\", \"https://i.imgur.com/gqVoI2b.png\");\nloadSprite(\"blue-evil-mushroom\", \"https://i.imgur.com/ZhEhvqr.png\");\nloadSprite(\"blue-surprise\", \"https://i.imgur.com/RMqCc1G.png\");\n\nscene(\"game\", ({ level, score, mov_speed, en_speed }) => {\n  MOVE_SPEED = mov_speed;\n  ENEMY_SPEED = en_speed;\n\n  layers([\"bg\", \"obj\", \"ui\"], \"obj\"); // in [] we have game layers. the last one is the default layer.\n\n  const maps = [\n    [\n      //level 1\n      \"=                                                                                                     =\",\n      \"=                                                                                                     =\",\n      \"=                                       ¿                                                             =\",\n      \"=                                                                                                     =\",\n      \"=                                                                                                     =\",\n      \"=       ^          *                    %                                                             =\",\n      \"=                                                                                                     =\",\n      \"=          $$$$   ^ $$$$                                                                              =\",\n      \"=        ======$$========            $b$$b$                                            ^              =\",\n      \"=    %                           $ b  b  b  b            *                                         -+ =\",\n      \"=                               b  b  b  b  b $b                                                   () =\",\n      \"=                     ^         b  b  b $b  b  b                       ^^^  ^^^  ^^^ ^  ^ ^ ^ ^ ^  () =\",\n      \"==========================   ====  =  =¿¿=  =  =============       ====================================\",\n    ],\n    [\n      //level 2\n      \"€                                                 $                                                  €\",\n      \"€                                                                                                    €\",\n      \"€                                                 ¿                                                  €\",\n      \"€                                            €                                                       €\",\n      \"€                                      €€       €€€€€€€€€                      €€€€€€                €\",\n      \"€                  *             €€                                  €€€€€€                   %      €\",\n      \"€                          €€                               €€€€€€                                   €\",\n      \"€          $$$$   z $$$$ ^                                                                           €\",\n      \"€           €€€€$$€€€€€€€                                                                            €\",\n      \"€     %  x                                                                                        -+ €\",\n      \"€       xxx                                                          €€€                          () €\",\n      \"€      xxxxxx      z  ^                         z                                                 () €\",\n      \"!!!!!!!!!!!!!!!!!!!!!!!  !!!!!                 !!!!!!!!!!!!!!!!!!!!        !!!!!!!!!!!!!!!!!!!!!!!!!!!\",\n    ],\n    [\n      //level 3 (testing)\n      \"=                                                                                           -+        =\",\n      \"=                                                                                           ()        =\",\n      \"=                                       ¿                                                   ()        =\",\n      \"=                                                                                      ==   ==        =\",\n      \"=                                                                                                     =\",\n      \"=       ^          *                    %                ======                  ======               =\",\n      \"=                                           =========                                                 =\",\n      \"=          $$$$   ^ $$$$                                                  =======                     =\",\n      \"=        ======$$========            $b$$b$                                                           =\",\n      \"=    %                          =======            *              ========                            =\",\n      \"=                                                                                                     =\",\n      \"=== =========                   ^                                           ^                         =\",\n      \"=                                  =  =¿¿=  =                                                         =\",\n    ],\n  ];\n\n  /*\n      loadSprite('blue-block', 'fVscIbn.png')\n  loadSprite('blue-brick', '3e5YRQd.png')\n  loadSprite('blue-steel', 'gqVoI2b.png')\n  loadSprite('blue-evil-mushroom', 'SvV4ueD.png')\n  loadSprite('blue-surprise', 'RMqCc1G.png')\n  \n      */\n  const levelCfg = {\n    width: 20,\n    height: 20,\n    b: [sprite(\"block\"), solid()],\n    \"=\": [sprite(\"block\"), solid()],\n    $: [sprite(\"coin\"), \"coin\" /*, solid()*/],\n    \"*\": [sprite(\"surprise\"), solid(), \"mushroom-surprise\"],\n    \"%\": [sprite(\"surprise\"), solid(), \"coin-surprise\"],\n    \"}\": [sprite(\"unboxed\"), solid()],\n    \"(\": [sprite(\"pipe-bottom-left\"), solid(), scale(0.5)],\n    \")\": [sprite(\"pipe-bottom-right\"), solid(), scale(0.5)],\n    \"-\": [sprite(\"pipe-top-left\"), solid(), scale(0.5), \"pipe\"],\n    \"+\": [sprite(\"pipe-top-right\"), solid(), scale(0.5), \"pipe\"],\n    \"^\": [sprite(\"evil-mushroom\"), solid(), \"dangerous\", body(), origin(\"bot\")],\n    \"#\": [\n      sprite(\"mushroom\"),\n      \"mushroom\" /*<-tag to identify for movement*/,\n      body(),\n    ], //body() gives gravity to sprites\n    \"¿\": [sprite(\"hidden-surprise\"), solid(), \"hidden-surprise\"],\n\n    //level 2 colored elements\n    \"!\": [sprite(\"blue-block\"), solid(), scale(0.5)],\n    \"€\": [sprite(\"blue-brick\"), solid(), scale(0.5)],\n    x: [sprite(\"blue-steel\"), solid(), scale(0.5)],\n    z: [sprite(\"blue-evil-mushroom\"), body(), solid(), scale(0.5), \"dangerous\"],\n    \"@\": [sprite(\"blue-surprise\"), solid(), scale(0.5), \"mushroom-surprise\"],\n  };\n\n  const gameLevel = addLevel(maps[level], levelCfg);\n\n  const scoreLabel = add([\n    text(score),\n    pos(30, 6),\n    layer(\"ui\"),\n    {\n      value: score,\n    },\n  ]);\n\n  add([text(\"level\" + parseInt(level + 1)), pos(40, 6)]); // we show level 1 when level-value is 0 with parseInt(level + 1) in order to make sense on the context of the game\n\n  //big function controls mario size when getting a mushroom\n  function big() {\n    let timer = 0;\n    let isBig = false;\n    return {\n      update() {\n        if (isBig) {\n          timer -= dt(); //its delta time since last frame\n          if (timer <= 0) {\n            //time runs out so mario comes back to be small\n            this.smallify();\n          }\n        }\n      },\n      isBig() {\n        return isBig;\n      },\n      smallify() {\n        this.scale = vec2(1);\n        current_jump_force = JUMP_FORCE;\n        timer = 0;\n        isBig = false;\n      },\n      biggify(time) {\n        this.scale = vec2(1.5);\n        current_jump_force = BIG_JUMP_FORCE;\n        timer = time; //increasing time we can prolongue the time mario is big\n        isBig = true;\n      },\n    };\n  }\n\n  const player = add([\n    sprite(\"mario\"),\n    solid(),\n    pos(30, 0),\n    body(), //will make mario be affected by gravity\n    big(),\n    origin(\"bot\"), //will avoid issues derived by body() use\n  ]);\n\n  //makes non-mario elemnts movement effects\n  action(\"mushroom\", (m) => {\n    m.move(50, 0); // the number is the speed of the movement\n  });\n  action(\"dangerous\", (d) => {\n    d.move(-ENEMY_SPEED, 0);\n  });\n\n  //MARIO MOVEMENTS AND EFFECTS keboard detection for player movement\n  player.on(\"headbump\", (obj) => {\n    //effects when hitting something with the head\n    if (obj.is(\"coin-surprise\")) {\n      gameLevel.spawn(\"$\", obj.gridPos.sub(0, 1)); // obj.gridPos.sub(0, 1) gives the coin the same position as the obj\n      destroy(obj); //destroy() make the block to dissapear in order to have the coin appereance\n      gameLevel.spawn(\"}\", obj.gridPos.sub(0, 0));\n    }\n    if (obj.is(\"mushroom-surprise\")) {\n      gameLevel.spawn(\"#\", obj.gridPos.sub(0, 1)); // obj.gridPos.sub(0, 1) gives the coin the same position as the obj\n      destroy(obj); //destroy() make the block to dissapear in order to have the coin appereance\n      gameLevel.spawn(\"}\", obj.gridPos.sub(0, 0));\n    }\n    if (obj.is(\"hidden-surprise\")) {\n      gameLevel.spawn(\"$\", obj.gridPos.sub(0, 1)); // obj.gridPos.sub(0, 1) gives the coin the same position as the obj\n      destroy(obj); //destroy() make the block to dissapear in order to have the coin appereance\n      gameLevel.spawn(\"}\", obj.gridPos.sub(0, 0));\n    }\n  });\n\n  //effects on touching elements with mario\n\n  player.collides(\"dangerous\", (d) => {\n    if (isJumping) {\n      destroy(d);\n      score = score + 5;\n    } else {\n      go(\"game\", { level: 0, score: 0, mov_speed: 200, en_speed: 30 });\n      destroy(player);\n    }\n  });\n\n  player.collides(\"mushroom\", (m) => {\n    destroy(m);\n    player.biggify(4); // the number we pass to biggify is the time spent while big\n  });\n  player.collides(\"coin\", (c) => {\n    destroy(c);\n    play(\"getCoin\");\n    scoreLabel.value++; //mario earns cash on hitting coins\n    scoreLabel.text = scoreLabel.value;\n  });\n  player.collides(\"pipe\", () => {\n    keyPress(\"down\", () => {\n      if (level === 0) {\n        go(\"clear-level-1\"); // Show the menu with a custom message after level 1\n      } else {\n        go(\"game\", {\n          score: scoreLabel.value,\n          level: (level + 1) % maps.length,\n          mov_speed: MOVE_SPEED,\n          en_speed: ENEMY_SPEED,\n        });\n      }\n    });\n  });\n\n  //MARIO DEATH BY FALLING\n  player.action(() => {\n    camPos(player.pos); // with camPos we set camera position to follow mario\n    if (player.pos.y >= FALL_DEATH) {\n      go(\"game\", { level: 0, score: 0, mov_speed: 200, en_speed: 30 });\n    }\n  });\n\n  //mario movement\n\n  player.action(() => {\n    if (player.grounded()) {\n      isJumping = false;\n    }\n  });\n\n  keyDown(\"left\", () => {\n    player.move(-MOVE_SPEED, 0); //negative value of MOVE_SPEED will move player to the left\n  });\n  keyDown(\"right\", () => {\n    player.move(MOVE_SPEED, 0); //positive value of MOVE_SPEED in order to move player to the right\n  });\n  keyPress(\"space\", () => {\n    if (player.grounded()) {\n      play(\"jump\");\n      isJumping = true;\n      player.jump(current_jump_force);\n    }\n  });\n});\n\nscene(\"lose\", ({ score, level }) => {\n  level = level + 1;\n  keyPress(\"space\", () => {\n    go(\"menu\");\n  });\n  add([\n    text(\n      `Game Over! Your score: ${score} \n  You reached level: ${level}\n      \n  press SPACE to play again.`,\n      16\n    ),\n    origin(\"center\"),\n    pos(width() / 2, height() / 2),\n  ]);\n});\n//lets try to make a MENU\nscene(\"menu\", () => {\n  add([\n    text(\"MARIO kaBOOOOM!\", 24),\n    pos(20, 80), //POSITION MIGHT HAVE TO BE SET AS WE DID BEFORE DUE TO GAME SCREEN SIZE OF THE PROJECT\n    color(220, 220, 220),\n  ]);\n  add([\n    text(\"Main Menu\", 22),\n    pos(100, 130), //POSITION MIGHT HAVE TO BE SET AS WE DID BEFORE DUE TO GAME SCREEN SIZE OF THE PROJECT\n    color(220, 220, 220),\n  ]);\n  //LET'S ADD BUTTONS FOR PLAYER CONTROL OVER THE MENU\n  add([\n    rect(170, 25),\n    pos(120, 180),\n    \"button\",\n    {\n      clickAction: () =>\n        go(\"game\", { level: 0, score: 0, mov_speed: 120, en_speed: 30 }),\n    },\n  ]);\n  add([text(\"Play game\", 18), pos(122, 182), color(0, 0, 0)]);\n\n  add([\n    rect(170, 25),\n    pos(120, 210),\n    \"button\",\n    {\n      clickAction: () => go(\"dificultySelection\"), //IMPLEMENT HERE THE LEVEL DIFICULTY SELECTION\n    },\n  ]);\n  add([text(\"DIFICULTY\", 18), pos(122, 212), color(0, 0, 0)]);\n\n  action(\"button\", (b) => {\n    if (b.isHovered()) b.use(color(128, 128, 128));\n    else b.use(color(192, 192, 192));\n    if (b.isClicked()) b.clickAction();\n  });\n});\n\nscene(\"dificultySelection\", () => {\n  add([\n    text(\"Choose game\", 24),\n    pos(20, 80), //POSITION MIGHT HAVE TO BE SET AS WE DID BEFORE DUE TO GAME SCREEN SIZE OF THE PROJECT\n    color(220, 220, 220),\n  ]);\n  add([\n    text(\"dificulty!\", 22),\n    pos(20, 110), //POSITION MIGHT HAVE TO BE SET AS WE DID BEFORE DUE TO GAME SCREEN SIZE OF THE PROJECT\n    color(220, 220, 220),\n  ]);\n  //LET'S ADD BUTTONS FOR PLAYER CONTROL OVER THE MENU\n  add([\n    rect(140, 25),\n    pos(40, 180),\n    \"button\",\n    {\n      clickAction: () =>\n        go(\"game\", { level: 0, score: 0, mov_speed: 90, en_speed: 25 }),\n    },\n  ]);\n  add([text(\"EASY\", 18), pos(72, 182), color(0, 0, 0)]);\n\n  add([\n    rect(140, 25),\n    pos(40, 210),\n    \"button\",\n    {\n      clickAction: () =>\n        go(\"game\", { level: 0, score: 0, mov_speed: 120, en_speed: 30 }),\n    },\n  ]);\n  add([text(\"MEDIUM\", 18), pos(58, 212), color(0, 0, 0)]);\n\n  add([\n    rect(140, 25),\n    pos(40, 240),\n    \"button\",\n    {\n      clickAction: () =>\n        go(\"game\", { level: 0, score: 0, mov_speed: 240, en_speed: 80 }),\n    },\n  ]);\n  add([text(\"HARD\", 18), pos(72, 242), color(0, 0, 0)]);\n\n  action(\"button\", (b) => {\n    if (b.isHovered()) b.use(color(128, 128, 128));\n    else b.use(color(192, 192, 192));\n    if (b.isClicked()) b.clickAction();\n  });\n});\n\nscene(\"clear-level-1\", () => {\n  add([\n    text(\"You get 50% off on Site Speed Optimization!\", 12),\n    pos(width() / 2 - width() / 3 - 10, height() / 2 - 50), // Center text message horizontally\n    color(220, 220, 220),\n  ]);\n\n  keyPress(\"space\", () => {\n    go(\"game\", { level: 1, score: 0, mov_speed: 90, en_speed: 25 });\n  });\n\n  add([\n    text(\"Press SPACE to continue\", 12),\n    pos(width() / 2 - width() / 3 - 10, height() / 2 + 5),\n    color(220, 220, 220),\n  ]);\n\n  action(\"button\", (b) => {\n    if (b.isHovered()) b.use(color(128, 128, 128));\n    else b.use(color(192, 192, 192));\n    if (b.isClicked()) b.clickAction();\n  });\n});\n\nstart(\"game\", { level: 0, score: 0, mov_speed: 200, en_speed: 25 });\n\n\n//# sourceURL=webpack:///./docs/game.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./docs/game.js"]();
/******/ 	
/******/ })()
;